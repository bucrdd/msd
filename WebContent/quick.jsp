<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="s" uri="/struts-tags"%>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<link rel="icon" href="https://static.jianshukeji.com/hcode/images/favicon.ico">
<style>



#container {
	min-width: 200px;
	max-width: 540px;
	margin: 0 auto;
}
input,
      button {
        font-family: "Cambria";
      }
      input[type=text],
      input[type=password] {
        font-size: 10px;
        min-height: 20px;
        margin: 0;
        padding: 7px 8px;
        outline: none;
        color: #333;
        background-color: #fff;
        background-repeat: no-repeat;
        background-position: right center;
        border: 1px solid #ccc;
        border-radius: 3px;
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.075);
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        transition: all 0.15s ease-in;
        -webkit-transition: all 0.15s ease-in 0;
        vertical-align: middle;
        width: 300px;
      }
      .button {
        position: relative;
        display: inline-block;
        margin: 0;
        padding: 8px 15px;
        font-size: 15px;
        font-weight: regular;
        color: #003F5F;
        text-shadow: 0 1px 0 rgba(255,255,255,0.9);
        white-space: nowrap;
        background-color: #eaeaea;
        background-image: -moz-linear-gradient(#fafafa, #eaeaea);
        background-image: -webkit-linear-gradient(#fafafa, #eaeaea);
        background-image: linear-gradient(#fafafa, #eaeaea);
        background-repeat: repeat-x;
        border-radius: 3px;
        border: 1px solid #ddd;
        border-bottom-color: #c5c5c5;
        box-shadow: 0 1px 3px rgba(0,0,0,.05);
        vertical-align: middle;
        cursor: pointer;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -webkit-appearance: none;
      }
      .button:hover,
      .button:active {
        background-position: 0 -15px;
        border-color: #ccc #ccc #b5b5b5;
      }
      .button:active {
        background-color: #dadada;
        border-color: #b5b5b5;
        background-image: none;
        box-shadow: inset 0 3px 5px rgba(0,0,0,.15);
      }
      .button:focus,
      input[type=text]:focus,
      input[type=password]:focus {
        outline: none;
        border-color: #51a7e8;
        box-shadow: inset 0 1px 2px rgba(0,0,0,.075), 0 0 5px rgba(81,167,232,.5);
      }
     
      label[for=search] {
        display: block;
        text-align: left;
      }
      #search label {
        font-weight: 200;
        padding: 5px 0;
      }
      #search input[type=text] {
        font-size: 6px;
        width: 200px;
      }
      #search .button {
        padding: 7px;
        width: 60px;
      }
      </style>	
<script src="js/network/highcharts.js"></script>
	<script src="js/network/exporting.js"></script>
	<script src="js/network/oldie.js"></script>
	<script src="js/network/networkgraph.js"></script>
</head>
<body>

<!--
*************************************************************************
   Generated by JShare at 2020-04-26 12:25:36
   From: https://jshare.com.cn/demos/HIrD8k
*************************************************************************
 -->

	<div id="container"></div>
	<script>
	var arr1 = new Array();
	
	var arr2 = new Array();
	var arr3 = new Array();
	</script>
	<s:iterator value="#request.query_List">
	<script>
	
	    
	
	arr1.push("<s:property value="node1"/>");
	arr2.push("<s:property value="node2"/>");
	arr3.push("<s:property value="node3"/>");

	//console.log(arr1);
	//console.log(arr4);

	</script>
	</s:iterator>
	
	<script>
	//网中只显示30个点
	var test = [1,1,2,3,4,5];
	
	var arr4 = arr2.slice(0,30);
	console.log(arr4);
	
	</script>
<script>
//删除元素
Array.prototype.contains = function(obj) {
	 var i = this.length;
	 while (i--) {
	  if (this[i] === obj) {
	   return i; // 返回的这个 i 就是元素的索引下标，
	  }
	 }
	 return false;
	}
	
	//arr4.splice(arr4.contains(''),1);
	console.log(arr4);
</script>
	<script>
	
	var fun = new String();
	for(var i = 0,len = arr3.length;i<len;i++){
		fun=arr3[i] + "," + fun;
	
		}
	console.log(fun);
	var str="http://david.abcc.ncifcrf.gov/api.jsp?type=ENTREZ_GENE_ID&ids=" + fun + "&tool=summary";
	var str2="http://david.abcc.ncifcrf.gov/api.jsp?type=ENTREZ_GENE_ID&ids=" + fun + "&tool=annotationReport&annot=GOTERM_BP_FAT,GOTERM_CC_FAT,GOTERM_MF_FAT,INTERPRO,PIR_SUPERFAMILY,SMART,BBID,BIOCARTA,KEGG_PATHWAY,COG_ONTOLOGY,SP_PIR_KEYWORDS,UP_SEQ_FEATURE,GENETIC_ASSOCIATION_DB_DISEASE,OMIM_DISEASE";
	var str3="http://david.abcc.ncifcrf.gov/api.jsp?type=ENTREZ_GENE_ID&ids=" + fun + "&tool=gene2gene";
	console.log(str);
	console.log(str2);
	console.log(str3);
	function openurl(){
		 window.open(str);
		
		}
	function openurl2(){
		 window.open(str2);
		
		}
	function openurl3(){
		 window.open(str3);
		
		}
	</script>
	
	<script>
	
	// Add the nodes option through an event call. We want to start with the parent
// item and apply separate colors to each child element, then the same color to
// grandchildren.
console.log("hello");
	function biarr(arr1,arr4){
		var arr = [];
		for(var i = 0,len = arr4.length;i<len;i++){
		arr[i]=[arr1[i],arr4[i]];
		}
		return arr;
		};

			
Highcharts.addEvent(
	Highcharts.seriesTypes.networkgraph,
	'afterSetOptions',


		
	function (e) {
		var colors = Highcharts.getOptions().colors,
			i = 1,
			nodes = {};
		e.options.data.forEach(function (link) {
			if(i > 5){ i = 0 };
			if (link[0] === arr1[0]) {
				nodes[arr1[0]] = {
					id: arr1[0],
					marker: {
						radius: 20
					}
				};
				nodes[link[1]] = {
					id: link[1],
					marker: {
						radius: 10
					},
					color: colors[i++]
				};
			}/*else if (nodes[link[0]] && nodes[link[0]].color) {
				nodes[link[1]] = {
					id: link[1],
					color: nodes[link[0]].color
				};
			}*/
		});
		e.options.nodes = Object.keys(nodes).map(function (id) {
			return nodes[id];
		});
	}
);
Highcharts.chart('container', {
	chart: {
		type: 'networkgraph',
		height: '100%'
	},
	title: {
		text: 'The HMs—Gene network'
	},
	subtitle: {
		text: ''
	},
	plotOptions: {
		networkgraph: {
			keys: ['from', 'to'],
			layoutAlgorithm: {
				enableSimulation: true
			}
		}
	},
	series: [{
		dataLabels: {
			enabled: true
		},
		data: biarr(arr1,arr4)
				
	}]
});


</script>

</body>
</html>
